function upsampling
theta = pi/4;
m =  100;
N = 100;
dt = 1/m;
t = -2:dt:2;
p = signalx(t);
bc = [1,-1,1,-1,1,-1,1,-1,1,-1];
bs = [-1,1,-1,1,-1,1,-1,1,-1,1];
[uc,tc] = upsampler(p,bc,m,10);
[us,ts] = upsampler(p,bs,m,10);
figure(1);
plot(tc,uc);
xlim([0 13]);
ylim([-2 2]);
xlabel({'Time','(In Seconds)'});ylabel({'Amplitude','(In Units)'});
title('Modulated Signal');
legend('U_c(t)');
grid on;
figure(2);
plot(ts,us);
xlim([0 13]);
ylim([-2 2]);
xlabel({'Time','(In Seconds)'});ylabel({'Amplitude','(In Units)'});
title('Modulated Signal');
legend('U_s(t)');
grid on;
[uc1,tc1] = upsampler(p,bc,m,4);
[us1,ts1] = upsampler(p,bs,m,4);
up1 = uc1.*cos(tc1.*40*pi);
figure(3);
plot(tc1,up1);
xlim([2 6]);
xlabel({'Time','(In Seconds)'});ylabel({'Amplitude','(In Units)'});
title('Upconverted Passband Signal with I component');
legend('U_p,1(t)');
grid on;
up_1 = uc1.*cos(tc1.*40*pi) - us1.*sin(ts1.*40*pi);
up = uc.*cos(tc.*40*pi) - us.*sin(ts.*40*pi);
figure(4);
plot(tc1,up_1);
xlim([2 6]);
xlabel({'Time','(In Seconds)'});ylabel({'Amplitude','(In Units)'});
title('Upconverted Passband Signal with I and Q components');
legend('U_p(t)');
grid on;
h = lowpassfilter(t);
[udc,tdc] = contconv(double(2*up.*(cos(tc.*40*pi))),double(h),tc(1),t(1),dt);
figure(5);
plot(tdc,udc);
xlim([0 14]);
xlabel({'Time','(In Seconds)'});ylabel({'Amplitude','(In Units)'});
title('Downconverted Baseband Signal(Theta = 0) for recovering I component');
legend('V_c(t)');
grid on;
[uds,tds] = contconv(double(2*up.*(sin(ts.*40*pi))),double(h),ts(1),t(1),dt);
figure(6);
plot(tds,uds);
xlim([0 14]);
xlabel({'Time','(In Seconds)'});ylabel({'Amplitude','(In Units)'});
title('Downconverted Baseband Signal(Theta = 0) for recovering Q component');
legend('V_s(t)');
grid on;
[udco,tdco] = contconv(double(2*up.*(cos(tc.*40*pi+theta))),double(h),tc(1),t(1),dt);
figure(7);
plot(tdco,udco);
xlim([0 14]);
grid on;
xlabel({'Time','(In Seconds)'});ylabel({'Amplitude','(In Units)'});
title('Downconverted Baseband Signal(Theta = pi/4) for recovering I component');
legend('V_c(t)');
[udso,tdso] = contconv(double(2*up.*(sin(ts.*40*pi+theta))),double(h),ts(1),t(1),dt);
figure(8);
grid on;
plot(tdso,udso);
xlim([0 14]);
xlabel({'Time','(In Seconds)'});ylabel({'Amplitude','(In Units)'});
title('Downconverted Baseband Signal(Theta = pi/4) for recovering Q component');
legend('V_s(t)');
uc_ = (udco*cos(pi/4) + udso*sin(pi/4))*3.7;
us_ = (udco*sin(pi/4) - udso*sin(pi/4))*3.7;
figure(9);
plot(tdco,uc_);
xlim([0 14]);
grid on;
xlabel({'Time','(In Seconds)'});ylabel({'Amplitude','(In Units)'});
title('Reconstructed uc');
legend('uc_r(t)');
figure(10);
plot(tdso,us_);
grid on;
xlim([0 14]);
xlabel({'Time','(In Seconds)'});ylabel({'Amplitude','(In Units)'});
title('Reconstructed us');
legend('us_r(t)');
end
function [y,t] = contconv(x1,x2,s1,s2,dt)
y = conv(x1,x2)*dt;
s1_2 = s1 + (length(x1)-1)*dt;
s2_2 = s2 + (length(x2)-1)*dt;
t1 = s1+ s2;
t2 = s2_2 + s1_2;
t = t1:dt:t2;
end
function [s,t] = upsampler(p,bc,m,N)
nsymbols = length(bc);
nsymbols_upsampled = 1 + (nsymbols - 1) * m;
symbols_upsampled = zeros(nsymbols_upsampled, 1);
symbols_upsampled(1:m:nsymbols_upsampled) = bc;
s1 = conv(symbols_upsampled,double(p));
s = s1.';
t = 0:1/m:(length(s) - 1)/m;
end
function u = signalx(t)
syms x;
y = piecewise(0 <= x <= 1, 1, 0);
u = subs(y,x,t);
end
function u = lowpassfilter(t)
syms x;
y = piecewise(0 <= x <= 0.25, 1, 0);
u = subs(y,x,t);
end